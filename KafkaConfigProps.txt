
@ConfigurationProperties(prefix = "stream.kafka")
@Validated
public class KafkaConfigProps {

	@NotBlank
	private String topic;

	@NotBlank
	private String schemaRegistryUrl;

	@NotNull
	private Consumer consumer;

	@NotNull
	private DeadLetter deadLetter;

	public String getTopic() {
		return topic;
	}

	public void setTopic(String topic) {
		this.topic = topic;
	}

	public DeadLetter getDeadLetter() {
		return deadLetter;
	}

	public void setDeadLetter(DeadLetter deadLetter) {
		this.deadLetter = deadLetter;
	}

	public String getSchemaRegistryUrl() {
		return schemaRegistryUrl;
	}

	public void setSchemaRegistryUrl(String schemaRegistryUrl) {
		this.schemaRegistryUrl = schemaRegistryUrl;
	}

	public Consumer getConsumer() {
		return consumer;
	}

	public void setConsumer(Consumer consumer) {
		this.consumer = consumer;
	}

	public static class Consumer {

		@NotNull
		private Integer concurrency;

		@NotNull
		private Integer pollTimeout;

		@NotBlank
		private String commitLogLevel;

		public Integer getConcurrency() {
			return concurrency;
		}

		public void setConcurrency(Integer concurrency) {
			this.concurrency = concurrency;
		}

		public Integer getPollTimeout() {
			return pollTimeout;
		}

		public void setPollTimeout(Integer pollTimeout) {
			this.pollTimeout = pollTimeout;
		}

		public String getCommitLogLevel() {
			return commitLogLevel;
		}

		public void setCommitLogLevel(String commitLogLevel) {
			this.commitLogLevel = commitLogLevel;
		}

		@Override
		public String toString() {
			return "Consumer{" +
					"concurrency=" + concurrency +
					", pollTimeout=" + pollTimeout +
					", commitLogLevel='" + commitLogLevel + '\'' +
					'}';
		}
	}

	public static class DeadLetter {

		@NotBlank
		private String topic;

		@NotNull
		private Long sendTimeoutMillis;

		public String getTopic() {
			return topic;
		}

		public void setTopic(String topic) {
			this.topic = topic;
		}

		public Long getSendTimeoutMillis() {
			return sendTimeoutMillis;
		}

		public void setSendTimeoutMillis(Long sendTimeoutMillis) {
			this.sendTimeoutMillis = sendTimeoutMillis;
		}

		@Override
		public String toString() {
			return "DeadLetter{" +
					"topic='" + topic + '\'' +
					", sendTimeoutMillis=" + sendTimeoutMillis +
					'}';
		}
	}

	@Override
	public String toString() {
		return "KafkaConfigProps{" +
				"topic='" + topic + '\'' +
				", schemaRegistryUrl='" + schemaRegistryUrl + '\'' +
				", consumer=" + consumer +
				", deadLetter=" + deadLetter +
				'}';
	}
}
